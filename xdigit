#!/bin/sh

source xbase

# Initialize default field-separator
fsep=$(set_fsep)

# Parse command line arguments and feed parsed arguments
args=$(getopt -o b:c:f:ht:u -l help -n ${0##*/} -- "$@")
eval set -- "$args"

default_class="class"
default_input="value"
default_bin="value"

while true; do
  case $1 in
    -b)
      # Read binning limits from this column
      bin_field=${2:?Invalid bin field}
      shift 2
      ;;

    -c)
      # Write class labels into this column
      class_field=${2:?Invalid class field}
      shift 2
      ;;

    -f)
      # Read input data from this column
      input_field=${2:?Invalid input field}
      shift 2
      ;;

    -t)
      # Change field sepearator (default is comma)
      fsep=$(set_fsep $2)
      shift 2
      ;;

    -u)
      # Allow equality for upper bound
      operator_lower="<"
      operator_upper="<="
      shift
      ;;

    -h|--help)
      cat << EOF
Usage: xdigit [OPT] DATA BINS
  -b BIN    Use column BIN of BINS-file as binning limits (default: $default_bin)
  -c CLS    Write class labels into column CLS (default: $default_class)
  -f INP    Calculate class labels for column INP of DATA-file (default: $default_input)
  -t FS     Use FS as field separator
  -u        Change class limits to \`lo < x <= hi'
  -h|--help Print this message and terminate

Class limits (BINS)
  By default are limited by a lower bound (inclusive) and an upper bound
  (exclusive). This behaviour can be change by the -u flag. Valid classes
  are numbered from 1 to N, where N is the number of class limits. There
  are two implicit classes, that contain all elements
    0:    less than the lowest lower bound
    N+1:  greater than the highest upper bound.

  The class limits are stored in a plain text file as sequence of bounds
    L0
    L1
    L2
    ...
    LN
  that results in following classes:
    0:          x < L0
    1:    L0 <= x < L1
    2:    L1 <= x < L2
    ...
    N+1:  LN <= x
EOF
      shift
      exit 0
      ;;

    --)
      shift
      break
      ;;
      
  esac
done

# Read input/bin files
data=${1:?Missing data file}
shift

bins=${1:?Missing data bins}
shift

# Create temporary file for awk-program
awk_program=$(mktemp "${0##*/}".XXXXXX)
awk_meta=$(mktemp "${0##*/}".XXXXXX)

class=${class_field:-$default_class}
limit=${bin_field:-$default_bin}
lower=${operator_lower:-"<="}
upper=${operator_upper:-"<"}


cat > "$awk_meta" << EOF
1 == NR {
  cur_limit=\$_$limit;
  min_limit=\$_$limit;
  max_limit=\$_$limit;
  cur_class=1;
}

1 < NR {
  print "("cur_limit" $lower %input%) && (%input% $upper "\$_$limit") { print "cur_class", \$0; next }";
  min_limit = (min_limit > \$_$limit) ? \$_$limit : min_limit;
  max_limit = (max_limit < \$_$limit) ? \$_$limit : max_limit;
  cur_limit = \$_$limit;
  cur_class += 1;
}

END {
  print "(%input% $upper "min_limit") { print 0, \$0; next }";
  print "("max_limit" $lower %input%) { print "cur_class", \$0; next }";
}
EOF

xcat "$bins" \
  | xawk -H -t "$fsep" -- -f "$awk_meta" \
  | sed -e "s/%input%/\$_${input_field:-$default_input}/g" \
  > "$awk_program"

# Print data file either by name or from stdin. A new column is prepended to
# contain the class label.
cat "$data" \
  | xawk -t "$fsep" -- -f "$awk_program" \
  | xheader -t "$fsep" -p "$class"

rm "$awk_program"
rm "$awk_meta"
