#!/bin/sh

source xbase

# Initialize default field-separator
fsep=$(set_fsep)

# Parse command line arguments and feed parsed arguments
args=$(getopt -o a:c::dhi:p:r:t:su -l help -n ${0##*/} -- "$@")
eval set -- "$args"

# Parse arguments
while true; do
  case $1 in
    -a)
      # Append to header
      append_header=$2
      shift 2
      ;;

    -p)
      # Prepend to header
      prepend_header=$2
      shift 2
      ;;

    -c)
      # Make canonical header
      canonical=${2:-_}
      shift 2
      ;;

    -i)
      # Insert new header as first line
      insert_header=$2
      shift 2
      ;;

    -r)
      # Replace current header
      replace_header=$2
      shift 2
      ;;

    -d)
      # Delete current header
      delete_header=1
      shift
      ;;

    -s)
      # Print current header but don't print data
      skip_data=1
      shift
      ;;

    -t)
      # Change field sepearator (default is comma)
      fsep=$(set_fsep $2)
      shift 2
      ;;

    -u)
      # Remove repeated headers
      unique_header=1
      shift
      ;;

    -h|--help)
      cat << EOF
  -i STR    Insert STR as header
  -r STR    Replace STR as header
  -d        Delete header
  -a STR    Append STR to header
  -p STR    Prepend STR to header
  -c        Canonicalize header (only: a-Z0-9_)
  -t FS     Field separator
  -s        Skip data
  -u        Remove repeated header definitions
  -h|--help Print this message and terminate
EOF
      exit 0
      ;;

    --)
      shift
      break
      ;;
  esac
done

# Insert header
if [ ! -z "$insert_header" ]; then
  raw_header=$insert_header
else
  # Consume exsiting header
  IFS= read -r raw_header
fi

# Replace header
if [ ! -z "$replace_header" ]; then
  raw_header=$replace_header
fi

[ ! -z "$prepend_header" ] && raw_header="$prepend_header""$fsep""$raw_header"
[ ! -z "$append_header" ] && raw_header="$raw_header""$fsep""$append_header"

# Make canonical header
if [ ! -z "$canonical" ]; then
  # Replace characters other than characters, digits or field-separator
  raw_header=$(tr -c "[[:alnum:]${fsep}\n]" "${canonical}" <<< "$raw_header")
fi

# Delete header
if [ 0 -ne ${delete_header:-0} ]; then
  raw_header=""
fi

if [ 0 -eq ${delete_header:-0} ]; then
  echo $raw_header
fi

# Skip remaining data
if [ 0 -eq ${skip_data:-0} ]; then
  if [ 0 -eq ${unique_header:-0} ]; then cat
  else fgrep -v "$raw_header"
  fi
fi
